import QRect from "./qt/qrect";
import QPoint from "./qt/qpoint";
import QSize from "./qt/qsize";
import QUuid from "./qt/quuid";
import Signal from "./qt/signal";
import QIcon from "./qt/qicon";

import type Output from "./output";
import type Tile from "./tile";
import type VirtualDesktop from "./virtualdesktop";
import {MaximizeMode} from "./enums";

export default interface Window {
    bufferGeometry: QRect;
    clientGeometry: QRect;
    pos: QPoint;
    size: QSize;
    x: number;
    y: number;
    width: number;
    height: number;
    opacity: number;
    output: Output;
    rect: QRect;
    resourceName: string;
    resourceClass: string;
    windowRole: string;
    desktopWindow: boolean;
    dock: boolean;
    toolbar: boolean;
    menu: boolean;
    normalWindow: boolean;
    dialog: boolean;
    splash: boolean;
    utility: boolean;
    dropdownMenu: boolean;
    popupMenu: boolean;
    tooltip: boolean;
    notification: boolean;
    criticalNotification: boolean;
    appletPopup: boolean;
    onScreenDisplay: boolean;
    comboBox: boolean;
    dndIcon: boolean;
    windowType: number;
    managed: boolean;
    deleted: boolean;
    skipsCloseAnimation: boolean;
    popupWindow: boolean;
    outline: boolean;
    internalId: QUuid;
    pid: number;
    stackingOrder: number;
    fullScreen: boolean;
    fullScreenable: boolean;
    active: boolean;
    desktops: VirtualDesktop[];
    onAllDesktops: boolean;
    activities: string[];
    skipTaskbar: boolean;
    skipPager: boolean;
    skipSwitcher: boolean;
    closeable: boolean;
    icon: QIcon;
    keepAbove: boolean;
    keepBelow: boolean;
    shadeable: boolean;
    shade: boolean;
    minimizable: boolean;
    minimized: boolean;
    iconGeometry: QSize;
    specialWindow: boolean;
    demandsAttention: boolean;
    caption: string;
    minSize: QSize;
    maxSize: QSize;
    wantsInput: boolean;
    transient: boolean;
    transientFor: Window | null;
    modal: boolean;
    frameGeometry: QRect;
    move: boolean;
    resize: boolean;
    decorationHasAlpha: boolean;
    noBorder: boolean;
    providesContextHelp: boolean;
    maximizable: boolean;
    moveable: boolean;
    moveableAcrossScreens: boolean;
    resizeable: boolean;
    desktopFileName: string;
    hasApplicationMenu: boolean;
    applicationMenuActive: boolean;
    unresponsive: boolean;
    colorScheme: string;
    layer: number;
    hidden: boolean;
    tile: Tile | null;
    inputMethod: boolean;

    closeWindow(): void;
    setReadyForPainting(): void;
    setMaximize(vertical: boolean, horizontal: boolean): void;

    stackingOrderChanged: Signal<() => void>;
    shadeChanged: Signal<() => void>;
    opacityChanged: Signal<(window: Window, oldOpacity: number) => void>;
    damaged: Signal<(window: Window) => void>;
    inputTransformationChanged: Signal<() => void>;
    closed: Signal<() => void>;
    windowShown: Signal<(window: Window) => void>;
    windowHidden: Signal<(window: Window) => void>;
    outputChanged: Signal<() => void>;
    skipCloseAnimationChanged: Signal<() => void>;
    windowRoleChanged: Signal<() => void>;
    windowClassChanged: Signal<() => void>;
    surfaceChanged: Signal<() => void>;
    shadowChanged: Signal<() => void>;
    bufferGeometryChanged: Signal<(oldGeometry: QRect) => void>;
    frameGeometryChanged: Signal<(oldGeometry: QRect) => void>;
    clientGeometryChanged: Signal<(oldGeometry: QRect) => void>;
    frameGeometryAboutToChange: Signal<() => void>;
    visibleGeometryChanged: Signal<() => void>;
    tileChanged: Signal<(tile: Tile) => void>;
    fullScreenChanged: Signal<() => void>;
    skipTaskbarChanged: Signal<() => void>;
    skipPagerChanged: Signal<() => void>;
    skipSwitcherChanged: Signal<() => void>;
    iconChanged: Signal<() => void>;
    activeChanged: Signal<() => void>;
    keepAboveChanged: Signal<(keepAbove: boolean) => void>;
    keepBelowChanged: Signal<(keepBelow: boolean) => void>;
    demandsAttentionChanged: Signal<() => void>;
    desktopsChanged: Signal<() => void>;
    activitiesChanged: Signal<() => void>;
    minimizedChanged: Signal<() => void>;
    paletteChanged: Signal<() => void>;
    colorSchemeChanged: Signal<() => void>;
    captionChanged: Signal<() => void>;
    captionNormalChanged: Signal<() => void>;
    maximizedAboutToChange: Signal<(mode: MaximizeMode) => void>;
    maximizedChanged: Signal<() => void>;
    transientChanged: Signal<() => void>;
    modalChanged: Signal<() => void>;
    quickTileModeChanged: Signal<() => void>;
    moveResizedChanged: Signal<() => void>;
    moveResizeCursorChanged: Signal<() => void>;
    interactiveMoveResizeStarted: Signal<() => void>;
    interactiveMoveResizeStepped: Signal<(oldGeometry: QRect) => void>;
    interactiveMoveResizeFinished: Signal<() => void>;
    closeableChanged: Signal<() => void>;
    minimizeableChanged: Signal<(minimizeable: boolean) => void>;
    shadeableChanged: Signal<(shadeable: boolean) => void>;
    maximizeableChanged: Signal<(maximizeable: boolean) => void>;
    desktopFileNameChanged: Signal<() => void>;
    applicationMenuChanged: Signal<() => void>;
    hasApplicationMenuChanged: Signal<(hasApplicationMenu: boolean) => void>;
    applicationMenuActiveChanged: Signal<(active: boolean) => void>;
    unresponsiveChanged: Signal<(unresponsive: boolean) => void>;
    decorationChanged: Signal<() => void>;
    hiddenChanged: Signal<() => void>;
    hiddenByShowDesktopChanged: Signal<() => void>;
    lockScreenOverlayChanged: Signal<() => void>;
    readyForPaintingChanged: Signal<() => void>;
}
